#!/bin/bash

if [ "$1" != "help" ] & [ "$1" != "install" ] & [ "$1" != "build" ] & [ "$1" != "test" ]; then
    rm convertedURLs.txt > /dev/null 2>&1
    touch convertedURLs.txt

    if [ "$(tail -c 1 "$1")" != "" ]; then
        echo "" >> "$1"
    fi

    while read line; do
        if [[ "$line" == *github* ]]; then
            echo "$line" >> convertedURLs.txt
        else
            npmPackage=$(echo "$line" | python3 -c "import sys; print(sys.stdin.read().split('/')[-1])")

            curURL="https://registry.npmjs.org/$npmPackage"

            (curl "$curURL" | python3 -c "import sys, json; urlArray = json.load(sys.stdin)['repository']['url'].split('/'); \
                                                        curGitUrl = 'https://github.com/' + urlArray[3] + '/' + urlArray[4].strip('.git'); \
                                                        urlFile = open('convertedURLs.txt', 'a'); \
                                                        urlFile.write(curGitUrl + '\n'); urlFile.close()") > /dev/null 2>&1

        fi
    done < "$1"
fi

if [ "$1" = "help" ]; then
    echo -e "Command line options are:\n\
    'install'   - installs any dependencies\n\
    'build'     - completes all compilation needed\n\
    'URL_FILE'  - takes in file containing URLs and calculates the scores\n\
    'test'      - conducts at least 20 distinct test cases"

elif [ "$1" = "install" ]; then
    npm install octokit > /dev/null 2>&1
    npm install cloc > /dev/null 2>&1
    
    echo "2 dependencies installed..."

elif [ "$1" = "build" ]; then
    tsc main.ts --outDir ./js/

    echo "Successfully built."

elif [ "$1" = "test" ]; then


    echo "testing"

else
    # URL_FILE

    node ./js/main.js "convertedURLs.txt"

fi
